{"version":3,"sources":["test.js"],"names":["Object","defineProperty","exports","value","chai_1","require","lib_1","lib_2","mock_1","describe","it","expect","tree2array","to","not","be","an","a","tree2object","a_array","TreeMock","nodes","deep","eq","b_array","c_array","array","undefined","a_object","b_object","_","i","j","k","c_object","x","y","z","object","b","c"],"mappings":"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","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst chai_1 = require(\"chai\");\nconst lib_1 = require(\"../lib\");\nconst lib_2 = require(\"../lib\");\nconst mock_1 = require(\"./mock\");\nrequire(\"mocha\");\ndescribe(\"tree2array\", () => {\n    it(\"should exist\", () => {\n        chai_1.expect(lib_1.tree2array).to.not.be.an(\"undefined\");\n    });\n    it(\"should be a function\", () => {\n        chai_1.expect(lib_1.tree2array).to.be.a(\"function\");\n    });\n});\ndescribe(\"tree2object\", () => {\n    it(\"should exist\", () => {\n        chai_1.expect(lib_2.tree2object).to.not.be.an(\"undefined\");\n    });\n    it(\"should be a function\", () => {\n        chai_1.expect(lib_2.tree2object).to.be.a(\"function\");\n    });\n});\ndescribe(\"tree2array\", () => {\n    it(\"should map 'a' node of tree to an array\", () => {\n        const a_array = lib_1.tree2array(\"a\", mock_1.TreeMock.value, mock_1.TreeMock.nodes);\n        chai_1.expect(a_array).to.deep.eq([\"α\"]);\n    });\n    it(\"should map 'b' node of tree to an array\", () => {\n        const b_array = lib_1.tree2array(\"b\", mock_1.TreeMock.value, mock_1.TreeMock.nodes);\n        chai_1.expect(b_array).to.deep.eq([\"β\", [\"i\", [0]], [\"j\", [1]], [\"k\", [2]]]);\n    });\n    it(\"should map 'c' node of tree to an array\", () => {\n        const c_array = lib_1.tree2array(\"c\", mock_1.TreeMock.value, mock_1.TreeMock.nodes);\n        chai_1.expect(c_array).to.deep.eq([\"γ\", [\"x\", [\"ξ\", [\"y\", [\"υ\", [\"z\", [\"ζ\"]]]]]]]);\n    });\n    it(\"should map root node of tree to an array\", () => {\n        const array = lib_1.tree2array(null, mock_1.TreeMock.value, mock_1.TreeMock.nodes);\n        chai_1.expect(array).to.deep.eq([\n            undefined,\n            [\"a\", [\"α\"]],\n            [\"b\", [\"β\", [\"i\", [0]], [\"j\", [1]], [\"k\", [2]]]],\n            [\"c\", [\"γ\", [\"x\", [\"ξ\", [\"y\", [\"υ\", [\"z\", [\"ζ\"]]]]]]]],\n        ]);\n    });\n});\ndescribe(\"tree2object\", () => {\n    it(\"should map 'a' node of tree to a string\", () => {\n        const a_object = lib_2.tree2object(\"a\", mock_1.TreeMock.value, mock_1.TreeMock.nodes);\n        chai_1.expect(a_object).to.deep.eq(\"α\");\n    });\n    it(\"should map 'b' node of tree to an object\", () => {\n        const b_object = lib_2.tree2object(\"b\", mock_1.TreeMock.value, mock_1.TreeMock.nodes);\n        chai_1.expect(b_object).to.deep.eq({\n            _: \"β\", i: 0, j: 1, k: 2,\n        });\n    });\n    it(\"should map 'c' node of tree to an object\", () => {\n        const c_object = lib_2.tree2object(\"c\", mock_1.TreeMock.value, mock_1.TreeMock.nodes);\n        chai_1.expect(c_object).to.deep.eq({\n            _: \"γ\", x: { _: \"ξ\", y: { _: \"υ\", z: \"ζ\" } },\n        });\n    });\n    it(\"should map root node of tree to an object\", () => {\n        const object = lib_2.tree2object(null, mock_1.TreeMock.value, mock_1.TreeMock.nodes);\n        chai_1.expect(object).to.deep.eq({\n            a: \"α\",\n            b: { _: \"β\", i: 0, j: 1, k: 2 },\n            c: { _: \"γ\", x: { _: \"ξ\", y: { _: \"υ\", z: \"ζ\" } } },\n        });\n    });\n});\n"],"file":"test.js"}